% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{fastPointMetrics}
\alias{fastPointMetrics}
\title{Calculate metrics on point neighborhoods}
\usage{
fastPointMetrics(
  las,
  method = ptm.voxels(),
  which_metrics = ENABLED_POINT_METRICS$names
)
}
\arguments{
\item{las}{\code{\link[lidR:LAS]{LAS}} object.}

\item{method}{neighborhood search algorithm - currently available: \code{\link{ptm.voxel}} and \code{\link{ptm.knn}}.}

\item{which_metrics}{optional \code{character} vector - list of metrics to be calculated. Overwrites the gobally enabled metrics set with \code{fastPointMetrics.available()}.}
}
\value{
\code{LAS} object with updated fields - one for each calculated metric.
}
\description{
Get statistics for every point's neighborhood. Check out \code{\link{fastPointMetrics.available}} for information about available metrics. Neighborhood search methods are prefixed by \code{ptm}.
}
\section{List of available point metrics}{


\loadmathjax

\emph{EVi} = \emph{i}-th 3D eigen value

\emph{EV2Di} = \emph{i}-th 2D eigen value

\itemize{
   \item \code{N}: number of nearest neighbors
   \item \code{MinDist}: minimum distance among neighbors 
   \item \code{MaxDist}: maximum distance among neighbors
   \item \code{MeanDist}: mean distance
   \item \code{SdDist}: standard deviation of within neighborhood distances
   \item \code{Linearity}: linear saliency, \mjeqn{(EV_{1} + EV_{2}) / EV_{1}}{}
   \item \code{Planarity}: planar Saliency, \mjeqn{(EV_{2} + EV_{3}) / EV_{1}}{}
   \item \code{Scattering}: \mjeqn{EV_{3} / EV_{1}}{}
   \item \code{Omnivariance}: \mjeqn{(EV_{2} + EV_{3}) / EV_{1}}{}
   \item \code{Anisotropy}: \mjeqn{(EV_{1} - EV_{3}) / EV_{1}}{}
   \item \code{Eigentropy}: \mjeqn{\sum_{i=1}^{n=3} EV_{i} * ln(EV_{i})}{}
   \item \code{EigenSum}: sum of eigenvalues, \mjeqn{\sum_{i=1}^{n=3} EV_{i}}{}
   \item \code{Curvature}: surface variation, \mjeqn{EV_{3} / EigenSum}{}
   \item \code{KnnRadius}: 3D neighborhood inclusion radius
   \item \code{KnnDensity}: 3D point density (N / sphere volume)
   \item \code{Verticality}: absolute vertical deviation, in degrees 
   \item \code{ZRange}: point neighborhood height difference
   \item \code{ZSd}: standard deviation of point neighborhood heights
   \item \code{KnnRadius2d}: 2D neighborhood inclusion radius 
   \item \code{KnnDensity2d}: 2D point density (N / circle area)
   \item \code{EigenSum2d}: sum of 2D eigenvalues, \mjeqn{\sum_{i=1}^{n=2} EV2D_{i}}{}
   \item \code{EigenRatio2d}: \mjeqn{EV2D_{2} / EV2D_{1}}{}
   \item \code{EigenValue\emph{i}}: 3D eigenvalues
   \item \code{EigenVector\emph{ij}}: 3D eigenvector coefficients, \emph{i}-th load of \emph{j}-th eigenvector
}
}

\examples{
file = system.file("extdata", "pine.laz", package="TreeLS")
tls = readTLS(file)
}
