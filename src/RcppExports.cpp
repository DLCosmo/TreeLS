// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// timesTwo
NumericVector timesTwo(NumericVector x);
RcppExport SEXP _TreeLS_timesTwo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x));
    return rcpp_result_gen;
END_RCPP
}
// getEigenValues
VectorXd getEigenValues(Map<MatrixXd> M);
RcppExport SEXP _TreeLS_getEigenValues(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Map<MatrixXd> >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(getEigenValues(M));
    return rcpp_result_gen;
END_RCPP
}
// singleStack
List singleStack(NumericMatrix& las, float pixel, float rad_max, float min_den);
RcppExport SEXP _TreeLS_singleStack(SEXP lasSEXP, SEXP pixelSEXP, SEXP rad_maxSEXP, SEXP min_denSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type las(lasSEXP);
    Rcpp::traits::input_parameter< float >::type pixel(pixelSEXP);
    Rcpp::traits::input_parameter< float >::type rad_max(rad_maxSEXP);
    Rcpp::traits::input_parameter< float >::type min_den(min_denSEXP);
    rcpp_result_gen = Rcpp::wrap(singleStack(las, pixel, rad_max, min_den));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TreeLS_timesTwo", (DL_FUNC) &_TreeLS_timesTwo, 1},
    {"_TreeLS_getEigenValues", (DL_FUNC) &_TreeLS_getEigenValues, 1},
    {"_TreeLS_singleStack", (DL_FUNC) &_TreeLS_singleStack, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_TreeLS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
